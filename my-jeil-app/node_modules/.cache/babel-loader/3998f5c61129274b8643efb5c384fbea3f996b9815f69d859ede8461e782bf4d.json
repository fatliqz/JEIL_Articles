{"ast":null,"code":"import React,{useState,useEffect}from'react';// import { makeStyles } from '@material-ui/core';\n// import { Box, Button, Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, MenuItem, Select, Checkbox, ListItemText } from '@material-ui/core';\nimport{Bar}from'react-chartjs-2';import'chart.js/auto';import{Box,Checkbox,Container,ListItemText,MenuItem,Paper,Select,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Typography}from'@mui/material';import{makeStyles}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({root:{display:'flex'},paper:{padding:theme.spacing(2)},Container:{marginTop:theme.spacing(2)},box:{maxWidth:theme.spacing(100)},table:{minWidth:650},select:{minWidth:200,marginBottom:theme.spacing(2)}}));export default function Usermoock(){const classes=useStyles();const[testsapi,setTestsAPI]=useState([]);const[selectedCategories,setSelectedCategories]=useState([]);useEffect(()=>{fetch('https://script.google.com/macros/s/AKfycbz8n0pUzWpfu4wUA-Y8DDViIZysVgtqpGZ-S1R13EwCcZ3HscBVBPzkO6lZLa11yduE/exec').then(res=>res.json()).then(data=>{setTestsAPI(data);});},[]);const handleCategoryChange=event=>{setSelectedCategories(event.target.value);};const getUniqueCategories=()=>{const categories=new Set(testsapi.map(test=>test.category_Name));return Array.from(categories);};const filteredData=testsapi.filter(test=>selectedCategories.length===0||selectedCategories.includes(test.category_Name));const chartData={labels:filteredData.map(test=>test.course_Name),datasets:[{label:'Total Students',data:filteredData.map(test=>test.totalStudents),backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{className:classes.Container,maxWidth:\"lg\",children:[/*#__PURE__*/_jsxs(Paper,{className:classes.paper,children:[/*#__PURE__*/_jsxs(Box,{maxWidth:\"lg\",className:classes.box,children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"User\"})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Select,{multiple:true,value:selectedCategories,onChange:handleCategoryChange,displayEmpty:true,className:classes.select,inputProps:{'aria-label':'Without label'},renderValue:selected=>Array.isArray(selected)&&selected.length===0?/*#__PURE__*/_jsx(\"em\",{children:\"None\"}):selected.join(', '),children:[/*#__PURE__*/_jsx(MenuItem,{disabled:true,value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"None\"})}),getUniqueCategories().map(category=>/*#__PURE__*/_jsxs(MenuItem,{value:category,children:[/*#__PURE__*/_jsx(Checkbox,{checked:selectedCategories.indexOf(category)>-1}),/*#__PURE__*/_jsx(ListItemText,{primary:category})]},category))]})})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{className:classes.table,\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Course_ID\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Year_created\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Month_created\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Category_Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Course_Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"TotalStudents\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"totalcer\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredData.map(test=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",align:\"center\",children:test.course_ID}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:test.year_created}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:test.month_created}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:test.category_Name}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:test.course_Name}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:test.totalStudents}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:test.totalcer})]},test.course_ID))})]})})]}),/*#__PURE__*/_jsxs(Paper,{className:classes.paper,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Chart\"}),/*#__PURE__*/_jsx(Bar,{data:chartData})]})]})});}","map":{"version":3,"names":["React","useState","useEffect","Bar","Box","Checkbox","Container","ListItemText","MenuItem","Paper","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","makeStyles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","useStyles","theme","root","display","paper","padding","spacing","marginTop","box","maxWidth","table","minWidth","select","marginBottom","Usermoock","classes","testsapi","setTestsAPI","selectedCategories","setSelectedCategories","fetch","then","res","json","data","handleCategoryChange","event","target","value","getUniqueCategories","categories","Set","map","test","category_Name","Array","from","filteredData","filter","length","includes","chartData","labels","course_Name","datasets","label","totalStudents","backgroundColor","borderColor","borderWidth","children","className","variant","multiple","onChange","displayEmpty","inputProps","renderValue","selected","isArray","join","disabled","category","checked","indexOf","primary","component","align","scope","course_ID","year_created","month_created","totalcer"],"sources":["D:/me/testwork/code/my-test-app/src/Testapi.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { makeStyles } from '@material-ui/core';\r\n// import { Box, Button, Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, MenuItem, Select, Checkbox, ListItemText } from '@material-ui/core';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport { Box, Checkbox, Container, ListItemText, MenuItem, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/material';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    Container: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    box: {\r\n        maxWidth: theme.spacing(100)\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    select: {\r\n        minWidth: 200,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Usermoock() {\r\n    const classes = useStyles();\r\n    const [testsapi, setTestsAPI] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://script.google.com/macros/s/AKfycbz8n0pUzWpfu4wUA-Y8DDViIZysVgtqpGZ-S1R13EwCcZ3HscBVBPzkO6lZLa11yduE/exec')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setTestsAPI(data);\r\n            });\r\n    }, []);\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategories(event.target.value);\r\n    };\r\n\r\n    const getUniqueCategories = () => {\r\n        const categories = new Set(testsapi.map(test => test.category_Name));\r\n        return Array.from(categories);\r\n    };\r\n\r\n    const filteredData = testsapi.filter(test =>\r\n        selectedCategories.length === 0 || selectedCategories.includes(test.category_Name)\r\n    );\r\n\r\n    const chartData = {\r\n        labels: filteredData.map(test => test.course_Name),\r\n        datasets: [\r\n            {\r\n                label: 'Total Students',\r\n                data: filteredData.map(test => test.totalStudents),\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className={classes.Container} maxWidth='lg'>\r\n                <Paper className={classes.paper}>\r\n                    <Box maxWidth='lg' className={classes.box}>\r\n                        <Box>\r\n                            <Typography variant='h6'>User</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <Select\r\n                                multiple\r\n                                value={selectedCategories}\r\n                                onChange={handleCategoryChange}\r\n                                displayEmpty\r\n                                className={classes.select}\r\n                                inputProps={{ 'aria-label': 'Without label' }}\r\n                                renderValue={(selected) => Array.isArray(selected) && selected.length === 0 ? <em>None</em> : selected.join(', ')}\r\n                            >\r\n                                <MenuItem disabled value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {getUniqueCategories().map((category) => (\r\n                                    <MenuItem key={category} value={category}>\r\n                                        <Checkbox checked={selectedCategories.indexOf(category) > -1} />\r\n                                        <ListItemText primary={category} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Box>\r\n                    </Box>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Course_ID</TableCell>\r\n                                    <TableCell align=\"center\">Year_created</TableCell>\r\n                                    <TableCell align=\"center\">Month_created</TableCell>\r\n                                    <TableCell align=\"center\">Category_Name</TableCell>\r\n                                    <TableCell align=\"center\">Course_Name</TableCell>\r\n                                    <TableCell align=\"right\">TotalStudents</TableCell>\r\n                                    <TableCell align=\"right\">totalcer</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {filteredData.map((test) => (\r\n                                    <TableRow key={test.course_ID}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            {test.course_ID}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{test.year_created}</TableCell>\r\n                                        <TableCell align=\"center\">{test.month_created}</TableCell>\r\n                                        <TableCell align=\"center\">{test.category_Name}</TableCell>\r\n                                        <TableCell align=\"center\">{test.course_Name}</TableCell>\r\n                                        <TableCell align=\"right\">{test.totalStudents}</TableCell>\r\n                                        <TableCell align=\"right\">{test.totalcer}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h6'>Chart</Typography>\r\n                    <Bar data={chartData} />\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}